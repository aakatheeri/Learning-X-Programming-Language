/* Control Directives
================================= */
/* Sass lets you use @if, @else, @for, @while, and @each to control the compilation of your code to CSS. */
/* @if/@else blocks behave exactly as you might expect */
/* If $debug is set to true, .info is displayed; if it's set to false then .info is not displayed.

Note: @debug will output debugging information to the command line.
Useful for checking variables while debugging your SCSS. */
.info {
  display: inline-block;
}

/* @for is a control loop that iterates through a range of values.
Particularly useful for setting styles on a collection of items.
There are two forms, "through" and "to". The former includes the last value, the latter stops at the last value. */
/* stop before the last value */
div:nth-of-type(1) {
  left: 0;
}

/* stop before the last value */
div:nth-of-type(2) {
  left: 300;
}

/* stop before the last value */
div:nth-of-type(3) {
  left: 600;
}

/* includes the last value */
.myclass-1 {
  color: #555555;
}

/* includes the last value */
.myclass-2 {
  color: #aaaaaa;
}

/* includes the last value */
.myclass-3 {
  color: white;
}

/* @while is very straightforward: */
.col-4 {
  width: 80px;
  left: 240px;
}

.col-3 {
  width: 80px;
  left: 160px;
}

.col-2 {
  width: 80px;
  left: 80px;
}

.col-1 {
  width: 80px;
  left: 0px;
}

/* @each functions like @for, except using a list instead of ordinal values
Note: you specify lists just like other variables, with spaces as delimiters. */
.social-links .icon-facebook {
  background-image: url("images/facebook.png");
}
.social-links .icon-twitter {
  background-image: url("images/twitter.png");
}
.social-links .icon-linkedin {
  background-image: url("images/linkedin.png");
}
.social-links .icon-reddit {
  background-image: url("images/reddit.png");
}

/*# sourceMappingURL=control-directives.css.map */
